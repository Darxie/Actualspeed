apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "cz.feldis.actualspeed"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "SDK_CLIENT_ID", "\"${getSdkClientId()}\""
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api ("com.sygic.sdk:maps-android:${sygicSdkVersion}@aar") {
        exclude group: 'com.google.android.gms'
        exclude group: 'androidx.core', module: 'core-ktx'
        transitive = true
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    api 'io.reactivex.rxjava2:rxjava:2.2.20'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

def getSdkClientId() {
    Properties properties = new Properties()
    def localProperties = new File(project.rootDir, 'local.properties')
    if (!localProperties.exists())
        throw new GradleException("'sdk.client.id' not defined in local.properties")

    properties.load(localProperties.newDataInputStream())
    def clientId = properties.getProperty('sdk.client.id', null)
    if (clientId == null)
        throw new GradleException("'sdk.client.id' not defined in local.properties")

    return clientId.toString()
}